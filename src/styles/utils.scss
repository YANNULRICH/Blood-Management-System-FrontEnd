/* Defining some general classes */

$ColorSet: (
  'grays' $grays,
  'colors' $colors,
);

@each $setKey, $setValue in $ColorSet {
  @each $color, $value in $setValue {
    .bg-#{$color} { background: $value !important; }
    .bg-hover-#{$color}:hover { background: $value !important; }

    .text-#{$color} { color: $value !important; }
    .text-hover-#{$color}:hover { color: $value !important; }
  }
}

.text-gray-40 { color: rgba(26, 27, 28, 0.4); }
.text-gray-shadow { color: #7A7B7C; }

.text-link {
  color: $primary;
  cursor: pointer;
  &:hover {
    font-weight: bold;
    text-decoration: underline;
  }
}

.title { font-size: 2em; }

.ifb-faded-coral { background: rgba(255, 98, 90, 0.15); color: #FF625A; }
.ifb-faded-coral-bg { background: rgba(255, 98, 90, 0.15) }

.ifb-faded-yellow { background: rgba(255, 222, 85, 0.2); color: #E2BD24; }
.ifb-faded-yellow-bg { background: rgba(255, 222, 85, 0.2); }

.ifb-faded-green { background: rgba(98, 181, 90, 0.16); color: #62B55A; }
.ifb-faded-green-bg { background: rgba(98, 181, 90, 0.16); }

.ifb-faded-blue { background: rgba(161, 218, 248, 0.61); color: #44546A; }
.ifb-faded-blue-bg { background: rgba(161, 218, 248, 0.61); }

.ifb-faded-gray { background: rgba(122, 123, 124, 0.2); color: #7A7B7C; }
.ifb-faded-gray-bg { background: rgba(122, 123, 124, 0.2); }

.cursor-none { cursor: none !important; }

.text-size-small { font-size: 0.75rem; } // 12px
.text-size-medium { font-size: 0.875rem; } // 14px
.text-size-large { font-size: 1rem; } // 16px
.text-size-larger { font-size: 1.125rem; } // 18px
.text-size-x-large { font-size: 1.25rem; } // 20px
.text-size-xx-large { font-size: 1.375rem; } // 22px
.text-size-xxx-large { font-size: 1.5rem; } // 24px

.font-family-sans-serif { font-family: sans-serif !important; }

@mixin csu-scrollbar {
  /* scrollbar Chrome & Safari */
  &::-webkit-scrollbar {
    width: 7px;
    height: 7px;
  }
  &::-webkit-scrollbar-thumb {
    background: #D9D9D9;
    -webkit-box-shadow: inset 0 0 6px rgba(217,217,217,0.3);
    border-radius: 10px;
  }
  &::-webkit-scrollbar-track {
    border-radius: 10px;
  }

  /* scrollbar Firefox */
  -ms-overflow-style: auto;
  scrollbar-width: thin;
  scrollbar-color: #D9D9D9;
}

.center-hor-ver {
  display: flex;
  align-items: center;
  justify-content: center;
}

.center-hor {
  display: flex;
  justify-content: center;
}

.center-ver {
  display: flex;
  align-items: center;
}

.d-table, .d-sm-table, .d-md-table, .d-lg-table {
  &.table-spacing-normal [class*='table-cell'] {
    padding: 10px 20px;
  }
}

.p-10-20 { padding: 10px 20px !important; }

.visibility-hidden { visibility: hidden !important; }
.vertical-align-top { vertical-align: top !important; }
.vertical-align-text-top { vertical-align: text-top !important; }
.vertical-align-text-bottom { vertical-align: text-bottom !important; }
.vertical-align-middle { vertical-align: middle !important; }

.rotate-45deg { transform: rotate(45deg) !important; }
.rotate-180deg { transform: rotate(180deg) !important; }

.z-index-10 {z-index: 10 !important;}
.outline-none {outline: none !important;}

.font-italic { font-style: italic !important; }
.font-normal { font-style: normal !important; }
.font-oblique { font-style: oblique !important; }

.text-transform-capitalize { text-transform: capitalize !important; }
.text-transform-inherit { text-transform: inherit !important; }
.text-transform-initial { text-transform: initial !important; }
.text-underline {
  text-decoration: underline !important;

  @at-root #{&}-hover:hover {
    text-decoration: underline !important;
    cursor: pointer;
  }
}

$cursors: inherit, initial, revert, unset, auto, default, pointer, none;
@each $cursor in $cursors {
  .cursor-#{$cursor} { cursor: $cursor !important; }
}

$white-spaces: inherit, initial, revert, unset, normal, nowrap, pre, pre-line, pre-wrap;
@each $space in $white-spaces {
  .white-space-#{$space} { white-space: $space !important; }
}

$word-breaks: break-all, break-word, keep-all, normal, initial, revert, inherit, unset;
@each $value in $word-breaks {
  .word-break-#{$value} { word-break: $value !important; }
}

/* ---- BOX-SHADOWS ---- */
.box-shadow-none { box-shadow: none !important; }

$px-sizes: -20px, -10px, 0px, 10px, 20px, 30px, 40px, 50px, 60px, 70px, 80px, 90px, 100px;
@each $size in $px-sizes {
  .height-#{$size} { height: $size !important; }
  .width-#{$size} { width: $size !important; }
  .min-height-#{$size} { min-height: $size !important; }
  .min-width-#{$size} { min-width: $size !important; }
  .max-height-#{$size} { max-height: $size !important; }
  .max-width-#{$size} { max-width: $size !important; }
  .top-#{$size} { top: $size !important; }
  .right-#{$size} { right: $size !important; }
  .bottom-#{$size} { bottom: $size !important; }
  .left-#{$size} { left: $size !important; }
}

$name-sizes: inherit, initial, revert, unset, auto, fit-content, max-content, min-content;
@each $size in $name-sizes {
  .height-#{$size} { height: $size !important; }
  .width-#{$size} { width: $size !important; }
}

$vh-sizes: 25vh, 50vh, 75vh, 100vh;
@each $size in $vh-sizes {
  .h-#{$size} { height: $size !important; }
  .w-#{$size} { width: $size !important; }
}

/* BORDER */
$border-sizes: 1px, 2px, 3px, 4px, 5px, 10px;
@each $size in $border-sizes {
  .border-radius-#{$size} {
    border-radius: $size;
  }
  .border-width-#{$size} {
    border-width: $size;
  }
}

$border-radius-sizes: 0, 25, 50, 100;
@each $size in $border-radius-sizes {
  .border-radius-#{$size} {
    border-radius: percentage($size / 100);
  }
}
